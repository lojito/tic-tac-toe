{"version":3,"sources":["hooks/useLocalStorage.js","reducers/types.js","reducers/gameReducer.js","contexts/GameContext.js","hooks/useFetchData.js","hooks/useLanguage.js","components/Board/BoardUI.js","Constants.js","contexts/DictionaryContext.js","contexts/CategoryContext.js","components/Header/Header.js","components/Navigation/Navigation.js","components/Category/Category.js","hooks/useImages.js","components/Images/Images.js","components/StartGame/StartGame.js","components/Level/Level.js","components/Board/Board.js","components/Board/Computer.js","components/Board/Square.js","components/Game/Result.js","hooks/useCategory.js","components/Game/Game.js","hooks/useFirst.js","hooks/useLevel.js","components/Category/CategoryHistory.js","components/Images/ImagesHistory.js","components/StartGame/StartGameHistory.js","components/Level/LevelHistory.js","components/Game/GamesHistory.js","components/Game/History.js","components/Board/BoardUIHistory.js","components/Game/GameHistory.js","components/Repository/Repository.js","components/About/About.js","components/Contact/Contact.js","App.js","index.js"],"names":["isLoading","gameReducer","state","action","type","types","game","id","length","filter","GameContext","createContext","GameContextProvider","children","key","initialValue","useReducer","gamesJson","window","localStorage","getItem","JSON","parse","error","games","dispatch","useEffect","setItem","stringify","useLocalStorage","Provider","value","getGame","jsonFile","useState","data","setData","setError","a","axios","get","res","console","log","message","fetchData","useLanguage","winners","player","lang","language","setLanguage","changeLanguageHandler","useCallback","DictionaryContext","DictionaryContextProvider","useFetchData","dictionary","CategoryContext","CategoryContextProvider","categories","Header","useContext","url","english","french","spanish","className","data-testid","src","onClick","alt","title","Navigation","htmlFor","exact","to","GAME","HISTORY","REPOSITORY","ABOUT","CONTACT","Category","React","memo","onChangeCategory","CATEGORY","onChange","e","target","map","category","name","user","computer","images","setImages","changeImagesHandler","randomImage","image","Math","floor","random","refreshImageUser","refreshImageComputer","Images","folder","onChangeImages","useImages","imageUser","imageComputer","YOU","USER_IMAGE_TOOLTIP","REFRESH_TOOLTIP","OPPONENT","COMPUTER_IMAGE_TOOLTIP","StartGame","disabled","onChangePlayer","START_TOOLTIP","START","YES","NO","Level","onChangeLevel","LEVEL_TOOLTIP","LEVEL","LEVEL_EASY","LEVEL_NORMAL","LEVEL_HARD","board","_first","_level","_moves","Board","first","level","canWinInTwoMovesSingle","square0","square1","square2","arr","result","i","push","Error","canWinInTwoMovesDouble","square3","square4","Array","fill","square","includes","reduce","index","Computer","play","winner","winners1","players","found","playHard","moves","place","isEmpty","playFromTwo","playFromTwo1","isAboutToWin","j","k","emptySquares","playEasy","this","Square","win","handleClick","style","backgroundImage","over","BoardUI","categoryId","disabledSquares","onGameOver","reset","setPlayers","gameInfo","isAWinner","getWinningSquares","isFull","setTimeout","squares","ind","indexOf","Result","MESSAGE_LOST","MESSAGE_WON","MESSAGE_DRAW","setCategory","changeCategoryHandler","showStartButton","Game","useCategory","setFirst","changeFirstHandler","useFirst","setLevel","changeLevelHandler","useLevel","settings","setSettings","disableSquares","setDisableSquares","gameOverHandler","gameInitHandler","chk","document","querySelector","checked","PLAY","GAME_OVER","PLAY_AGAIN","CategoryHistory","ImageHistory","StartGameHistory","STARTED_BY","STARTED_BY_COMPUTER","STARTED_BY_PLAYER","LevelHistory","GamesHistory","ImagesHistory","SEE_GAME","DELETE_GAME","History","historyGames","NO_HISTORY_YET","BoardUIHistory","GameHistory","props","gameId","match","params","history","BACK","Repository","About","techStackLi","tech","href","rel","source","gamesLi","GAME_WRITTEN_WITH","SOURCE_CODE","OTHER_GAMES","Contact","contact","AUTHOR","EMAIL","GITHUB","LINKEDIN","App","basename","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c3b196de.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport { gameReducer } from '../reducers/gameReducer';\r\n\r\nlet isLoading;\r\nexport default (key, initialValue) => {\r\n  const [games, dispatch] = useReducer(gameReducer, [], () => {\r\n    try {\r\n      isLoading = true;\r\n      const gamesJson = window.localStorage.getItem(key);\r\n      return gamesJson ? JSON.parse(gamesJson) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isLoading){\r\n      isLoading = false;\r\n      return;\r\n    }\r\n    localStorage.setItem(key, JSON.stringify(games));\r\n  },[key, games]);\r\n  \r\n  return {games, dispatch};\r\n}","export default {\r\n  ADD_GAME : 'ADD_GAME',\r\n  REMOVE_GAME : 'REMOVE_GAME'\r\n}","import types from './types';\r\n\r\nexport const gameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_GAME:\r\n      action.game.id = ((state.length === 0)? 0 : state[state.length -1].id + 1);\r\n      return [...state, action.game]\r\n    case types.REMOVE_GAME:\r\n      return state.filter(game => game.id !== action.id);  \r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { createContext } from 'react';\r\nimport useLocalStorage          from '../hooks/useLocalStorage';\r\nexport const GameContext = createContext();\r\n\r\nconst GameContextProvider = ({children}) => {\r\n\r\n  const {games, dispatch} = useLocalStorage('tictactoe', []);\r\n\r\n  const getGame = (id) => {\r\n    if (games.length > 0){\r\n      return games.filter((game) => game.id === id)[0];\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GameContext.Provider value={{games, dispatch, getGame}}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n\r\n}\r\n \r\nexport default GameContextProvider;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\n\r\nexport default (jsonFile) => {\r\n  const [data, setData] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try{\r\n        const res = await axios.get(`https://tic-tac-toe-974b0.firebaseio.com/${jsonFile}.json`);\r\n        setData(res.data);\r\n        setError('');\r\n      } catch(e) {\r\n        setError(`Error while fetching the ${jsonFile}.json file from the Google Cloud`);\r\n        setData('');\r\n        console.log('ERROR: ', e.message);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [jsonFile]);\r\n\r\n  return {data, error};\r\n}","import { useState, useCallback } from 'react';\r\nimport { ENGLISH } from '../Constants';\r\n\r\nfunction useLanguage(lang = ENGLISH){\r\n  const [language, setLanguage] = useState(lang);\r\n  \r\n  const changeLanguageHandler = useCallback(language => {\r\n    setLanguage(language);\r\n  }, []);\r\n  \r\n  return [language, changeLanguageHandler];\r\n}\r\n\r\nexport default useLanguage;","import React, { useState, useCallback, useEffect, memo}  from 'react';\r\nimport Board from '../Board/Board';\r\nimport Computer from '../Board/Computer';\r\nimport Square from './Square';\r\nimport {EMPTY, USER, COMPUTER, LOST, WON, DRAW } from '../../Constants';\r\nimport './Board.css';\r\n\r\nconst board = new Board();\r\nconst computer = new Computer(board);\r\nlet winners; \r\nlet player;\r\nlet over = false;\r\n\r\nconst BoardUI = memo(({categoryId, folder, imageUser, imageComputer, first, level, disabledSquares, onGameOver = () => {}}) => {\r\n  const [players, setPlayers] = useState(() => {\r\n    board.level = level;\r\n    board.first = first;\r\n    player = first;\r\n    over = false;\r\n    board.reset();\r\n    winners = [];\r\n    return board.players;\r\n  });\r\n\r\n  const gameInfo = useCallback(() => {\r\n    return {\r\n      categoryId,\r\n      imageUser,\r\n      imageComputer,\r\n      first,\r\n      level,\r\n      board: [...board.players],\r\n      winners\r\n    }\r\n  }, [categoryId, imageUser, imageComputer, first, level]);\r\n\r\n  const play = useCallback((e) => {\r\n    if (!over){\r\n      if (player === COMPUTER){\r\n        if (typeof e !== \"undefined\"){\r\n          return;\r\n        }\r\n        computer.play();\r\n      } else {\r\n          board.place(USER, e.target.id); \r\n      }\r\n      setPlayers(board.players);\r\n      if (board.isAWinner(player)){\r\n        over = true;\r\n        winners = board.getWinningSquares();\r\n        onGameOver({\r\n          ...gameInfo(),\r\n          result: player === COMPUTER ? LOST : WON\r\n        })\r\n      } else if (board.isFull){\r\n        over = true;\r\n        winners = board.getWinningSquares();\r\n        onGameOver({\r\n          ...gameInfo(),\r\n          result: DRAW\r\n        })\r\n      } else {\r\n        player = player === COMPUTER ? USER : COMPUTER;\r\n        if (player === COMPUTER){\r\n          window.setTimeout(play, 2);\r\n        }\r\n      }\r\n    }\r\n  }, [gameInfo, onGameOver]);\r\n\r\n  useEffect(() => {\r\n    board.level = level;\r\n    board.first = first;\r\n    player = first;\r\n    if (!disabledSquares){\r\n      if (over){\r\n        over = false;\r\n        board.reset();\r\n        winners = [];\r\n        setPlayers(board.players);\r\n      }\r\n      if (first === COMPUTER){\r\n        play();\r\n      }\r\n    }\r\n  }, [first, level, disabledSquares, play]);\r\n\r\n  const squares = players.map((square, ind) => {\r\n    const player = (square === COMPUTER) ? `${folder}%2F${imageComputer}` : ((square === USER) ? `${folder}%2F${imageUser}` : 'default'); \r\n    const win = over ? (winners.indexOf(ind) !== -1 ? 'win' : '') : '';\r\n    const disabled = disabledSquares ? true : (over ? true : (square !== EMPTY ? true : false));\r\n\r\n    return (<Square \r\n              key         = {ind} \r\n              player      = {player} \r\n              win         = {win}\r\n              disabled    = {disabled}\r\n              id          = {ind}\r\n              handleClick = {play}\r\n            />\r\n    ) \r\n  }); \r\n  \r\n  return (\r\n    <div className=\"board\">\r\n      {squares}\r\n    </div>\r\n  )\r\n \r\n});\r\n\r\nexport default BoardUI","const EMPTY = 0;\r\nconst COMPUTER = 1;\r\nconst USER = 2;\r\nconst TOTAL_SQUARES = 9;\r\nconst EASY = 1;\r\nconst HARD = 2;\r\nconst NORMAL = 3;\r\nconst LOST = 0;\r\nconst WON =  1;\r\nconst DRAW = 2;\r\nconst UNKNOWN = 3;\r\nconst ENGLISH = 0;\r\nconst FRENCH = 1;\r\nconst SPANISH = 2;\r\nconst imagesPerCategory = 20;\r\n\r\nexport {EMPTY, COMPUTER, USER, EASY, HARD, NORMAL, TOTAL_SQUARES, LOST, WON, DRAW, UNKNOWN, ENGLISH, FRENCH, SPANISH, imagesPerCategory};","import React, { createContext } from 'react';\r\nimport useFetchData from '../hooks/useFetchData';\r\nimport useLanguage from '../hooks/useLanguage';\r\nimport * as constants from '../Constants';\r\n\r\nexport const DictionaryContext = createContext();\r\n\r\nconst DictionaryContextProvider = ({children}) => {\r\n  let {data: dictionary, error} = useFetchData(\"dictionary\");\r\n  const [language, changeLanguageHandler] = useLanguage(constants.ENGLISH);\r\n\r\n  dictionary = dictionary[language];\r\n\r\n  return (\r\n    <DictionaryContext.Provider value={{dictionary, error, changeLanguageHandler}}>\r\n      {children}\r\n    </DictionaryContext.Provider>\r\n  );\r\n\r\n}\r\n \r\nexport default DictionaryContextProvider;","import React, { createContext } from 'react';\r\nimport useFetchData from '../hooks/useFetchData';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryContextProvider = ({children}) => {\r\n  let {data: categories, error} = useFetchData(\"categories\");\r\n\r\n  return (\r\n    <CategoryContext.Provider value={{categories, error}}>\r\n      {children}\r\n    </CategoryContext.Provider>\r\n  );\r\n\r\n}\r\n \r\nexport default CategoryContextProvider;","import React, { useContext} from 'react';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport * as constants from '../../Constants';\r\nimport './Header.css';\r\n\r\nconst { ENGLISH, FRENCH, SPANISH } = constants;\r\n\r\nconst Header = () => {\r\n  const { dictionary, changeLanguageHandler } = useContext(DictionaryContext);\r\n  \r\n  if (dictionary){\r\n    const url = 'https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images';    \r\n    const english = dictionary['ENGLISH_HINT'];\r\n    const french  = dictionary['FRENCH_HINT' ];\r\n    const spanish = dictionary['SPANISH_HINT'];\r\n\r\n    return (\r\n      <header>\r\n          <div className=\"flags\" data-testid=\"flags\">\r\n            <img data-testid=\"english\" src={`${url}%2Fflags%2Fusa.jpg?alt=media`}   onClick={() => { changeLanguageHandler(ENGLISH); }} alt={english}  title={english}/>\r\n            <img data-testid=\"french\" src={`${url}%2Fflags%2Ffrance.jpg?alt=media`} onClick={() => { changeLanguageHandler(FRENCH);  }} alt={french}  title={french}/>\r\n            <img data-testid=\"spanish\" src={`${url}%2Fflags%2Fspain.jpg?alt=media`} onClick={() => { changeLanguageHandler(SPANISH); }} alt={spanish}  title={spanish}/>\r\n          </div>\r\n      </header>\r\n    )    \r\n  } else {\r\n    return (null)\r\n  }\r\n}\r\n\r\nexport default Header;","import { NavLink }            from 'react-router-dom';\r\nimport React, { useContext }  from 'react';\r\nimport { DictionaryContext }  from '../../contexts/DictionaryContext';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  return dictionary ? (\r\n    <nav>\r\n      <input type=\"checkbox\" id=\"menu\" />\r\n      <label className=\"mylabel\" htmlFor=\"menu\">\r\n        <div id=\"burger-container\">\r\n          <div id=\"burger\">\r\n            <span>&nbsp;</span>\r\n            <span>&nbsp;</span>\r\n            <span>&nbsp;</span>\r\n          </div>\r\n        </div>\r\n      </label> \r\n      <ul data-testid=\"nav\" className='nav'>\r\n        <li key='0'><NavLink data-testid=\"game\" exact to={'/'}          >{dictionary.GAME}      </NavLink></li>\r\n        <li key='1'><NavLink data-testid=\"history\" exact to={'/history'}   >{dictionary.HISTORY}   </NavLink></li>\r\n        <li key='2'><NavLink data-testid=\"repository\" exact to={'/repository'}>{dictionary.REPOSITORY}</NavLink></li>\r\n        <li key='3'><NavLink data-testid=\"about\" exact to={'/about'}     >{dictionary.ABOUT}     </NavLink></li>\r\n        <li key='4'><NavLink data-testid=\"contact\" exact to={'/contact'}   >{dictionary.CONTACT}   </NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  ) : (null)\r\n}\r\n\r\nexport default Navigation;","import React, { useContext } from 'react';\r\nimport { CategoryContext }   from '../../contexts/CategoryContext';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport './Category.css';\r\n\r\nconst Category = React.memo(({onChangeCategory = () => {}}) => {\r\n  const { categories } = useContext(CategoryContext);  \r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  return dictionary && categories ? (\r\n    <div className=\"categories\" data-testid=\"categories\">\r\n      <span data-testid=\"description\">{dictionary.CATEGORY}: </span>\r\n      <select data-testid=\"select\" onChange={(e) => {onChangeCategory(categories[e.target.value])}}>\r\n      {categories.map((category) => {\r\n          return (\r\n            <option key={category.id} value={category.id} data-testid='select-option'>{dictionary[category.name]}</option>\r\n          )\r\n      })}\r\n      </select>\r\n    </div>\r\n  ) : (null)\r\n})\r\n\r\nexport default Category;\r\n","import { useState, useCallback } from 'react';\r\nimport { imagesPerCategory } from '../Constants';\r\n\r\nexport default (user = 0, computer = 1) => {\r\n  const [images, setImages] = useState({user, computer});\r\n  \r\n  const changeImagesHandler = useCallback(images => {\r\n    setImages(images);\r\n  }, []);\r\n\r\n  const randomImage = useCallback(() => {\r\n    let image = Math.floor(Math.random() * imagesPerCategory);\r\n    while ( image === images.computer || image === images.user ){\r\n      image = Math.floor(Math.random() * imagesPerCategory);\r\n    }\r\n    return image;\r\n  }, [images.computer, images.user])\r\n\r\n  const refreshImageUser = useCallback(() => {\r\n    setImages({\r\n      user : randomImage(),\r\n      computer: images.computer,\r\n    })\r\n  }, [images.computer, randomImage])\r\n\r\n  const refreshImageComputer = useCallback(() => {\r\n    setImages({\r\n      user : images.user,\r\n      computer: randomImage()\r\n    })\r\n  }, [images.user, randomImage])\r\n\r\n  if (images.user === images.computer) {\r\n    refreshImageUser();\r\n  }\r\n\r\n  return { images, changeImagesHandler, randomImage, refreshImageUser, refreshImageComputer }\r\n}  ","import React, { useContext, useEffect }    from 'react';\r\nimport { DictionaryContext }               from '../../contexts/DictionaryContext';\r\nimport useImages                           from '../../hooks/useImages';\r\nimport {COMPUTER, USER, imagesPerCategory} from '../../Constants';\r\nimport './Images.css';\r\n\r\nconst Images = React.memo(({folder, onChangeImages = () => {}}) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  const {images, refreshImageUser, refreshImageComputer} = useImages(Math.floor(Math.random() * imagesPerCategory), Math.floor(Math.random() * imagesPerCategory));\r\n  const {user: imageUser, computer: imageComputer} = images;\r\n\r\n  const url = 'https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images';\r\n \r\n  useEffect(() => {\r\n    onChangeImages({\r\n      user: imageUser,\r\n      computer: imageComputer\r\n    });\r\n  }, [imageUser, imageComputer, onChangeImages]);\r\n\r\n  return dictionary ? (\r\n    <div className={\"images\"}>\r\n\r\n      <div className='user-image'>\r\n        <span>{dictionary.YOU}: </span>\r\n        <img className=\"image-token\" \r\n            src={`${url}%2F${folder}%2F${imageUser}.jpg?alt=media`} \r\n            alt=\"user\" \r\n            title={dictionary.USER_IMAGE_TOOLTIP}/>\r\n        <img className='refresh' \r\n              src={`${url}%2Frefresh.png?alt=media`} \r\n              alt=\"refresh\" \r\n              onClick={()=>refreshImageUser(USER)}\r\n              title={dictionary.REFRESH_TOOLTIP} />\r\n      </div>\r\n\r\n      <div className='computer-image'>\r\n        <span>{dictionary.OPPONENT}: </span>\r\n        <img className=\"image-token\"\r\n            src={`${url}%2F${folder}%2F${imageComputer}.jpg?alt=media`}\r\n            alt=\"computer\"\r\n            title={dictionary.COMPUTER_IMAGE_TOOLTIP}/>\r\n        <img className='refresh'\r\n            src={`${url}%2Frefresh.png?alt=media`} \r\n            alt=\"refresh\" \r\n            onClick={()=>refreshImageComputer(COMPUTER)}\r\n            title={dictionary.REFRESH_TOOLTIP} />\r\n      </div>\r\n      \r\n    </div>\r\n  ) : (null)\r\n  \r\n});\r\n\r\nexport default Images;","import React, { useContext } from 'react';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport { USER, COMPUTER }    from '../../Constants';\r\nimport './StartGame.css';\r\n\r\nconst StartGame = React.memo(({disabled, onChangePlayer = () => {}}) => {\r\n  const { dictionary, error } = useContext(DictionaryContext);\r\n  \r\n  if (error){\r\n    return <div className=\"error\" data-testid=\"error\">{error}</div>\r\n  }\r\n\r\n  return dictionary ? (\r\n    <div className=\"start\" data-testid=\"startgame\">\r\n        <span title = {dictionary.START_TOOLTIP}>{dictionary.START}?</span>\r\n        <select data-testid=\"select\" onChange={(e) => {onChangePlayer(e.target.value * 1)}} disabled = {disabled} >\r\n          <option data-testid=\"select-option\" key={0}  value={USER}>{dictionary.YES   }</option>\r\n          <option data-testid=\"select-option\" key={1}  value={COMPUTER}>{dictionary.NO}</option>\r\n        </select>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">Loading the StartGame page...</div>\r\n  )\r\n});\r\n\r\nexport default StartGame;","import React, { useContext }  from 'react';\r\nimport { DictionaryContext }  from '../../contexts/DictionaryContext';\r\nimport { EASY, HARD, NORMAL } from '../../Constants';\r\nimport './Level.css';\r\n\r\nconst Level = React.memo(({disabled, onChangeLevel = () => {}}) => {\r\n  const { dictionary, error } = useContext(DictionaryContext);\r\n  \r\n  if (error){\r\n    return <div className=\"error\" data-testid=\"error\">{error}</div>\r\n  }\r\n\r\n  return dictionary ? (\r\n    <div className=\"level\" data-testid=\"level\">\r\n      <span title = {dictionary.LEVEL_TOOLTIP}>{dictionary.LEVEL}?</span>\r\n      <select data-testid=\"select\" onChange={(e) => {onChangeLevel(e.target.value * 1)}} disabled = {disabled} >\r\n        <option data-testid=\"select-option\" key={EASY}   value={EASY}>   {dictionary.LEVEL_EASY  }</option>\r\n        <option data-testid=\"select-option\" key={NORMAL} value={NORMAL}> {dictionary.LEVEL_NORMAL}</option>\r\n        <option data-testid=\"select-option\" key={HARD}   value={HARD}>   {dictionary.LEVEL_HARD  }</option>\r\n      </select>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">Loading the Level page...</div>\r\n  )\r\n}); \r\n\r\nexport default Level;","import * as constants from '../../Constants';\r\nconst { EMPTY, USER, COMPUTER, EASY, HARD, NORMAL, TOTAL_SQUARES } = constants;\r\nlet board = null;\r\nlet _first = USER;\r\nlet _level = EASY;\r\nlet _moves = 0;\r\n\r\nclass Board {\r\n  constructor(first = USER, level = EASY){\r\n    board = Array(TOTAL_SQUARES).fill(EMPTY);\r\n    _first = first;\r\n    _level = level;\r\n  }\r\n\r\n  get level(){\r\n    return _level;\r\n  }\r\n\r\n  set level(level){\r\n    if (level === EASY || level === HARD || level === NORMAL){\r\n      _level = level;\r\n    } else {\r\n      throw new Error('Invalid level');\r\n    }\r\n  }\r\n\r\n  get first(){\r\n    return _first;\r\n  }\r\n\r\n  set first(first){\r\n    if (first === COMPUTER || first === USER){\r\n      _first = first;\r\n    } else {\r\n      throw new Error('Invalid player');\r\n    }  \r\n  }\r\n\r\n  get moves(){\r\n    return _moves;\r\n  } \r\n\r\n  get isFull(){\r\n    return !board.includes(EMPTY);\r\n  }\r\n\r\n  get isEmpty(){\r\n    return (!(board.includes(COMPUTER) || board.includes(USER)));\r\n  }\r\n\r\n  get emptySquares(){\r\n    return board.reduce((arr, square, index )=> {\r\n      if (square === EMPTY){\r\n        arr.push(index);\r\n      }\r\n      return arr;\r\n    }, []);\r\n  }\r\n\r\n  get players(){\r\n    return [...board];\r\n  }\r\n\r\n  reset(){\r\n    board.fill(EMPTY);\r\n    _moves = 0;\r\n  }\r\n\r\n  place(player, square){\r\n    if (square >= 0 && square < board.length){ \r\n      if (player === COMPUTER || player === USER || player === EMPTY){\r\n        board[square] = player;\r\n        if (player !== EMPTY){\r\n          _moves++;\r\n        } else {\r\n          _moves--;\r\n        }\r\n        return true;\r\n      } else {\r\n        throw new Error('Invalid player');\r\n      }\r\n    } else {\r\n      throw new Error('Invalid square');\r\n    }\r\n  }\r\n\r\n  isAboutToWin(player){\r\n    if (player === COMPUTER || player === USER){\r\n      const arr = [[0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]];\r\n      let square0, square1, square2;\r\n\r\n      for (let i = 0; i< arr.length; i++){\r\n        square0 = arr[i][0];\r\n        square1 = arr[i][1];\r\n        square2 = arr[i][2]; \r\n        if (board[square0] === player && board[square1] === player  && board[square2] === EMPTY){\r\n          return square2;\r\n        }\r\n        if (board[square0] === player  && board[square1] === EMPTY && board[square2] === player){\r\n          return square1;\r\n        }\r\n        if (board[square0] === EMPTY  && board[square1] === player  && board[square2] === player){\r\n          return square0;\r\n        }\r\n      }\r\n      return -1\r\n    } else {\r\n      throw new Error('Invalid player');\r\n    } \r\n  }\r\n\r\n  canWinInTwoMovesSingle = (player) => {\r\n    if (player === COMPUTER || player === USER){\r\n      const arr = [[0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]];\r\n      const result = [];\r\n      let square0, square1, square2;\r\n\r\n      for (let i = 0; i < arr.length; i++){\r\n        square0 = arr[i][0];\r\n        square1 = arr[i][1];\r\n        square2 = arr[i][2]; \r\n        if (board[square0] === player && board[square1] === EMPTY  && board[square2] === EMPTY){\r\n          result.push([square1, square2]);\r\n        }\r\n        if (board[square0] === EMPTY  && board[square1] === player && board[square2] === EMPTY){\r\n          result.push([square0, square2]);\r\n        }\r\n        if (board[square0] === EMPTY  && board[square1] === EMPTY  && board[square2] === player){\r\n          result.push([square0, square1]);\r\n        }\r\n      }\r\n      if (result.length > 0){\r\n        return result;\r\n      } else {\r\n        return -1;\r\n      }\r\n    } else {\r\n      throw new Error('Invalid player');\r\n    } \r\n  }\r\n\r\n  canWinInTwoMovesDouble = (player) => {\r\n    if (player === COMPUTER || player === USER){    \r\n      const arr = [ [0,1,2,3,6], [0,1,2,4,8], [0,3,6,4,8], [2,0,1,5,8], [2,0,1,4,6], [2,5,8,4,6], [6,0,3,7,8], [6,0,3,2,4], [6,2,4,7,8], [8,6,7,2,5], [8,6,7,0,4], [8,2,5,0,4], [1,0,2,4,7], [3,0,6,4,5], [5,2,8,3,4], [7,1,4,6,8]];\r\n      const result = [];\r\n      let square0, square1, square2, square3, square4;\r\n\r\n      for (let i = 0; i < arr.length; i++){\r\n        square0 = arr[i][0];\r\n        square1 = arr[i][1];\r\n        square2 = arr[i][2];\r\n        square3 = arr[i][3];\r\n        square4 = arr[i][4];\r\n        if (board[square0] === EMPTY && \r\n          ((board[square1] === EMPTY && board[square2] === player) || (board[square1] === player && board[square2] === EMPTY)) && \r\n          ((board[square3] === EMPTY && board[square4] === player) || (board[square3] === player && board[square4] === EMPTY))){\r\n          result.push(square0);\r\n        }\r\n      }\r\n      if (result.length > 0){\r\n        return result;\r\n      } else {\r\n        return -1;\r\n      }\r\n    } else {\r\n      throw new Error('Invalid player');\r\n    } \r\n  }\r\n\r\n  isAWinner(player){\r\n    return (\r\n      ((board[0] === player && board[1] === player && board[2] === player)) ||\r\n      ((board[3] === player && board[4] === player && board[5] === player)) ||\r\n      ((board[6] === player && board[7] === player && board[8] === player)) ||\r\n      ((board[0] === player && board[3] === player && board[6] === player)) ||\r\n      ((board[1] === player && board[4] === player && board[7] === player)) ||\r\n      ((board[2] === player && board[5] === player && board[8] === player)) ||\r\n      ((board[0] === player && board[4] === player && board[8] === player)) ||\r\n      ((board[2] === player && board[4] === player && board[6] === player)) \r\n    )\r\n  }\r\n  \r\n  getWinningSquares(){\r\n    return (\r\n      ((board[0] === board[1]) && (board[1] === board[2]) && [0,1,2]) ||\r\n      ((board[3] === board[4]) && (board[4] === board[5]) && [3,4,5]) ||\r\n      ((board[6] === board[7]) && (board[7] === board[8]) && [6,7,8]) ||\r\n      ((board[0] === board[3]) && (board[3] === board[6]) && [0,3,6]) ||\r\n      ((board[1] === board[4]) && (board[4] === board[7]) && [1,4,7]) ||\r\n      ((board[2] === board[5]) && (board[5] === board[8]) && [2,5,8]) ||\r\n      ((board[0] === board[4]) && (board[4] === board[8]) && [0,4,8]) ||\r\n      ((board[2] === board[4]) && (board[4] === board[6]) && [2,4,6]) || []\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Board;","import * as constants from '../../Constants';\r\n\r\nconst { EMPTY, USER, COMPUTER, EASY, HARD, NORMAL } = constants;\r\n\r\nclass Computer{\r\n\r\n  constructor(board){\r\n    this.board = board;\r\n  }\r\n\r\n  play = () => {\r\n    const players = this.board.players;\r\n    const level = this.board.level;\r\n    let winner, winners, winners1, square1, square2;\r\n    let found = false;\r\n    const result  = [];\r\n\r\n    const playFromTwo = () => {\r\n      const players = this.board.players;\r\n      const arr = [[8,2,6], [2,8,0], [0,6,2], [6,0,8]];\r\n      for (let i = 0; i < arr.length; i++){\r\n        if (players[arr[i][0]] === COMPUTER){\r\n          if (players[1] === USER || players[7] === USER){\r\n            this.board.place(COMPUTER, arr[i][1]);\r\n            return true;\r\n          } else if (players[3] === USER || players[5] === USER){\r\n            this.board.place(COMPUTER, arr[i][2]);\r\n            return true;\r\n          }\r\n        }\r\n      }  \r\n      return false;\r\n    }\r\n  \r\n    const playFromTwo1 = () => {\r\n      const players = this.board.players;\r\n      const arr = [[0,2,6,8],[0,6,2,8],[0,8,2,6],[2,0,6,8],[2,6,0,8],[2,8,0,6],[6,0,2,8],[6,2,0,8],[6,8,0,2],[8,0,2,6],[8,2,0,6],[8,6,0,2]];\r\n      for (let i = 0; i < arr.length; i++){\r\n        if (players[arr[i][0]] === COMPUTER && players[arr[i][1]] === USER){\r\n          this.board.place(COMPUTER, [arr[i][2],arr[i][3]][Math.floor(Math.random() * 2)]);\r\n          return true;\r\n        }\r\n      }\r\n      return false;     \r\n    }\r\n\r\n    const playHard = () =>{\r\n      if (this.board.first === USER){\r\n        if (this.board.moves === 1){\r\n          if (players[4] === USER){\r\n            this.board.place(COMPUTER, [0,2,6,8][Math.floor(Math.random() * 4)]);\r\n          } else {\r\n            this.board.place(COMPUTER, 4);\r\n          }\r\n          return;\r\n        }\r\n      } else {\r\n        if (this.board.isEmpty){\r\n          this.board.place(COMPUTER, [0,2,6,8,4][Math.floor(Math.random() * 5)]);\r\n          return;\r\n        }\r\n        if (this.board.moves === 2){\r\n          if (playFromTwo()){ \r\n              return;\r\n          } else {\r\n            if (playFromTwo1()){\r\n              return;\r\n            }  \r\n          }\r\n        }  \r\n      }\r\n      if ((winner = this.board.isAboutToWin(COMPUTER)) !== -1){\r\n        this.board.place(COMPUTER, winner);\r\n      } else if ((winner = this.board.isAboutToWin(USER)) !== -1){\r\n        this.board.place(COMPUTER, winner);\r\n      } else if ((winners = this.board.canWinInTwoMovesDouble(COMPUTER)) !== -1){\r\n        this.board.place(COMPUTER, winners[Math.floor(Math.random() * winners.length)]);  \r\n      } else {\r\n        winners = this.board.canWinInTwoMovesSingle(COMPUTER)\r\n        if (winners !== -1){\r\n          for (let i = 0; i< winners.length; i++){\r\n            for (let j = 0; j< 2; j++){\r\n              if (j === 0){\r\n                square1 = winners[i][0];\r\n                square2 = winners[i][1];\r\n              } else {\r\n                square1 = winners[i][1];\r\n                square2 = winners[i][0];\r\n              }\r\n              this.board.place(COMPUTER, square1);\r\n              winners1 = this.board.canWinInTwoMovesDouble(USER);\r\n              for (let k = 0; k < winners1.length; k++){\r\n                if (winners1[k] === square2){\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              if (!found){\r\n                result.push(square1);\r\n              } else {\r\n                found = false;\r\n              }\r\n              this.board.place(EMPTY, square1)\r\n            }\r\n          }\r\n          if (result.length > 0){\r\n            this.board.place(COMPUTER, result[Math.floor(Math.random() * result.length)]);\r\n          } else {\r\n            const emptySquares = this.board.emptySquares;\r\n            this.board.place(COMPUTER,emptySquares[Math.floor(Math.random() * emptySquares.length)]);\r\n          }\r\n        } else {\r\n          const emptySquares = this.board.emptySquares;\r\n          this.board.place(COMPUTER,emptySquares[Math.floor(Math.random() * emptySquares.length)]);\r\n        }\r\n      } \r\n    }\r\n\r\n    const playEasy = () =>{\r\n      const emptySquares = this.board.emptySquares;\r\n      this.board.place(COMPUTER,emptySquares[Math.floor(Math.random() * emptySquares.length)]);\r\n    }\r\n\r\n    if (level === HARD){\r\n      playHard();\r\n    } else if (level === EASY){\r\n      playEasy();\r\n    } else if (level === NORMAL){\r\n      if (Math.floor(Math.random() * 2)){\r\n        playHard();\r\n      } else {\r\n        playEasy();\r\n      }\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default Computer;","import React from 'react';\r\nimport './Board.css';\r\n\r\nconst Square = React.memo(({win, disabled, handleClick = () => {}, id, player}) => {\r\n  return (\r\n    <button style     = {{ backgroundImage : `url(https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images%2F${player}.jpg?alt=media)`}}\r\n            className = {win}\r\n            disabled  = {disabled} \r\n            onClick   = {(e) => { handleClick(e) }}\r\n            id        = {id}>\r\n    </button>\r\n  )\r\n});\r\n\r\nexport default Square;","import React, { useContext}  from 'react';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport * as constants        from '../../Constants';\r\n\r\nconst { LOST, WON } = constants;\r\n\r\nconst Result = ({result}) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  let message = '';\r\n\r\n  if (dictionary){\r\n    if (result === LOST){\r\n      message = dictionary.MESSAGE_LOST;\r\n    } else if (result === WON){\r\n      message = dictionary.MESSAGE_WON;\r\n    } else {\r\n      message = dictionary.MESSAGE_DRAW;\r\n    }\r\n    return (\r\n      <span>{message}</span>\r\n    )\r\n  } else {\r\n    return (null)\r\n  }\r\n\r\n}\r\n\r\nexport default Result","import { useState, useCallback } from 'react';\r\n\r\nexport default () => {\r\n  const [category, setCategory] = useState({id: 0, folder: 'habana', name: 'HAVANA_LANDMARKS'});\r\n  \r\n  const changeCategoryHandler = useCallback(category => {\r\n    setCategory(category);\r\n  }, []);\r\n  \r\n  return { category, changeCategoryHandler }\r\n}","import React, { useState, useEffect, useContext, useCallback }  from 'react';\r\nimport { GameContext }       from '../../contexts/GameContext';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport Category              from '../Category/Category';\r\nimport Images                from '../Images/Images';\r\nimport StartGame             from '../StartGame/StartGame';\r\nimport Level                 from '../Level/Level';\r\nimport BoardUI               from '../Board/BoardUI';\r\nimport Result                from './Result';\r\nimport types                 from '../../reducers/types';\r\nimport useCategory           from '../../hooks/useCategory';\r\nimport useImages             from '../../hooks/useImages';\r\nimport useFirst              from '../../hooks/useFirst';\r\nimport useLevel              from '../../hooks/useLevel';\r\nimport './Game.css';\r\n\r\nlet result = \"\";\r\nlet showStartButton = true;\r\nlet over = false;\r\n\r\nconst Game = () => {\r\n  const { dispatch } = useContext(GameContext);\r\n  const { dictionary, error } = useContext(DictionaryContext);\r\n\r\n  const {category, changeCategoryHandler} = useCategory();\r\n  const {folder} = category;\r\n\r\n  const {images, changeImagesHandler} = useImages();\r\n\r\n  const {first, changeFirstHandler} = useFirst();\r\n  const {level, changeLevelHandler} = useLevel();\r\n\r\n  const [settings, setSettings] = useState(false);\r\n  \r\n  const [disableSquares, setDisableSquares] = useState(true);\r\n\r\n  const gameOverHandler = useCallback((game) => {\r\n    over = true;\r\n    setSettings(false);\r\n    setDisableSquares(true);\r\n    result = game.result;\r\n    dispatch({type: types.ADD_GAME, game});\r\n  }, [dispatch]);\r\n\r\n  const gameInitHandler = useCallback(() => {\r\n    showStartButton = false;\r\n    over = false;\r\n    setSettings(true);\r\n    setDisableSquares(false);\r\n  }, []);\r\n \r\n  useEffect(() => {\r\n    showStartButton = true;\r\n    over = false;\r\n\r\n    return () => {\r\n      const chk = document.querySelector('input#menu');\r\n      if (chk){\r\n        chk.checked = false;\r\n      }\r\n    }    \r\n  }, [gameInitHandler])\r\n\r\n  if (error){\r\n    return <div className=\"error\">{error}</div>\r\n  }\r\n\r\n  return dictionary ? (\r\n    <div className=\"game text-center\">\r\n\r\n      <Category onChangeCategory = {changeCategoryHandler}/>\r\n\r\n      <Images folder={folder} onChangeImages={changeImagesHandler}/>\r\n\r\n      <div className=\"settings\">\r\n        <StartGame disabled={settings} onChangePlayer={changeFirstHandler} />\r\n        <Level     disabled={settings} onChangeLevel ={changeLevelHandler} />\r\n      </div>\r\n\r\n      {showStartButton && (\r\n        <div className=\"start-playing\">\r\n          <button onClick={gameInitHandler}>{dictionary.PLAY}</button>\r\n        </div>)}\r\n\r\n      <BoardUI categoryId={category.id}\r\n               folder={folder} \r\n               imageUser={images.user}\r\n               imageComputer={images.computer}\r\n               first={first}\r\n               level={level}\r\n               disabledSquares={disableSquares}\r\n               onGameOver={gameOverHandler}/>\r\n\r\n      {over && ( \r\n        <div className=\"board-footer\">  \r\n          <span>{dictionary.GAME_OVER}: </span>\r\n          <Result result = {result}/>\r\n          <input  className=\"play-again\" \r\n                  type=\"button\" \r\n                  value={dictionary.PLAY_AGAIN} \r\n                  onClick={gameInitHandler} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\">Loading the Game page...</div>\r\n  )\r\n}\r\n\r\nexport default Game","import { useState, useCallback } from 'react';\r\nimport { USER } from '../Constants';\r\n\r\nexport default () => {\r\n  const [first, setFirst] = useState(USER);\r\n  \r\n  const changeFirstHandler = useCallback(first => {\r\n    setFirst(first);\r\n  }, []);\r\n  \r\n  return { first, changeFirstHandler }\r\n}","import { useState, useCallback } from 'react';\r\nimport { EASY } from '../Constants';\r\n\r\nexport default () => {\r\n  const [level, setLevel] = useState(EASY);\r\n  \r\n  const changeLevelHandler = useCallback(level => {\r\n    setLevel(level);\r\n  }, []);  \r\n  \r\n  return { level, changeLevelHandler }\r\n}","import React, { useContext } from 'react';\r\nimport { CategoryContext }   from '../../contexts/CategoryContext';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport './Category.css';\r\n\r\nconst CategoryHistory = ({categoryId}) => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { dictionary } = useContext(DictionaryContext);\r\n\r\n  return dictionary && categories ? (\r\n    <div className = \"categories\">\r\n      <span>{dictionary.CATEGORY}: </span>\r\n      <span>{dictionary[categories[categoryId].name]}</span>\r\n    </div>\r\n  ) : (null)\r\n}\r\n\r\nexport default CategoryHistory\r\n","import React, { useContext }  from 'react';\r\nimport { DictionaryContext }  from '../../contexts/DictionaryContext';\r\nimport './Images.css';\r\n\r\nconst ImageHistory = ({folder, imageUser, imageComputer}) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  \r\n  const url = 'https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images';\r\n  \r\n  return dictionary ? (\r\n    <div className={\"images\"}>\r\n\r\n      <div className='user-image'>\r\n        <span>{dictionary.YOU}: </span>\r\n        <img className=\"image-token\" \r\n            src={`${url}%2F${folder}%2F${imageUser}.jpg?alt=media`} \r\n            alt=\"user\" />\r\n      </div>\r\n\r\n      <div className='computer-image'>\r\n        <span>{dictionary.OPPONENT}: </span>\r\n        <img className=\"image-token\"\r\n            src={`${url}%2F${folder}%2F${imageComputer}.jpg?alt=media`}\r\n            alt=\"computer\" />\r\n      </div>\r\n      \r\n    </div>\r\n  ) : (null)\r\n}\r\n\r\nexport default ImageHistory","import React, { useContext }  from 'react';\r\nimport { DictionaryContext }  from '../../contexts/DictionaryContext';\r\nimport { COMPUTER }           from '../../Constants';\r\nimport './StartGame.css';\r\n\r\nconst StartGameHistory = ({first}) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  \r\n  return dictionary ? (\r\n    <div className=\"start\">\r\n      {dictionary.STARTED_BY}&nbsp;\r\n      {first === COMPUTER ? dictionary.STARTED_BY_COMPUTER : dictionary.STARTED_BY_PLAYER}\r\n    </div>\r\n  ) : (null)\r\n}\r\n\r\nexport default StartGameHistory","import React, { useContext }  from 'react';\r\nimport { DictionaryContext }  from '../../contexts/DictionaryContext';\r\nimport { EASY, HARD}          from '../../Constants';\r\nimport './Level.css';\r\n\r\nconst LevelHistory = ({level}) => {\r\n  const { dictionary } = useContext(DictionaryContext);\r\n  \r\n  return dictionary ? (\r\n    <div className=\"level\">\r\n      {dictionary.LEVEL}:&nbsp;\r\n      {level === EASY ? dictionary.LEVEL_EASY : ((level === HARD) ? dictionary.LEVEL_HARD : dictionary.LEVEL_NORMAL)}\r\n    </div>\r\n  ) : (null)\r\n}\r\n\r\nexport default LevelHistory","import React, { useContext }   from 'react';\r\nimport { Link }                from 'react-router-dom';\r\nimport {CategoryContext}       from '../../contexts/CategoryContext';\r\nimport { DictionaryContext }   from '../../contexts/DictionaryContext';\r\nimport { GameContext }         from '../../contexts/GameContext';\r\nimport CategoryHistory         from '../Category/CategoryHistory';\r\nimport ImagesHistory           from '../Images/ImagesHistory';\r\nimport StartGameHistory        from '../StartGame/StartGameHistory';\r\nimport LevelHistory            from '../Level/LevelHistory';\r\nimport Result                  from './Result';\r\nimport './GameHistory.css';\r\n\r\nconst GamesHistory = ({categoryId, imageUser, imageComputer, result, id, first, level}) => {\r\n  const { dictionary } = useContext(DictionaryContext);  \r\n  const { categories } = useContext(CategoryContext);  \r\n  const { dispatch}  = useContext(GameContext);\r\n  \r\n  return categories && dictionary ? (\r\n    <div>\r\n\r\n      <CategoryHistory categoryId = {categoryId}/>\r\n\r\n      <ImagesHistory imageUser={imageUser} imageComputer={imageComputer} folder={categories[categoryId].folder}/>\r\n\r\n      <div className=\"settings\">\r\n        <StartGameHistory  first = {first}/>\r\n        <LevelHistory      level = {level}/>\r\n      </div>\r\n      \r\n      <div className=\"board-footer\">\r\n        <Result result = {result}/>\r\n        \r\n        <button className=\"see-game\">\r\n          <Link to={`/${id}`}>{dictionary.SEE_GAME}</Link>\r\n        </button>\r\n\r\n        <input type=\"button\" \r\n               value={dictionary.DELETE_GAME}\r\n               onClick={(e) => { \r\n                dispatch({type: 'REMOVE_GAME', id });\r\n               }} \r\n               className=\"delete-game\"/>\r\n      </div>\r\n\r\n      <hr/>\r\n\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\">Loading the Historical page...</div>\r\n  )\r\n}\r\n\r\nexport default GamesHistory;","import React, { useContext, useEffect } from 'react';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport { GameContext }       from '../../contexts/GameContext';\r\nimport GamesHistory          from './GamesHistory';\r\n\r\nconst History = () => {\r\n  const { dictionary, error } = useContext(DictionaryContext);  \r\n  const { games } = useContext(GameContext);\r\n  let historyGames;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const chk = document.querySelector('input#menu');\r\n      if (chk){\r\n        chk.checked = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (error){\r\n    return <div className=\"error\">{error}</div>\r\n  }\r\n\r\n  if (dictionary){\r\n    if (games && games.length > 0){\r\n      historyGames = games.map((game) => {\r\n        return (<GamesHistory \r\n                  key            = {game.id}\r\n                  imageUser      = {game.imageUser}\r\n                  imageComputer  = {game.imageComputer}\r\n                  categoryId     = {game.categoryId}\r\n                  id             = {game.id}\r\n                  first          = {game.first}\r\n                  level          = {game.level}\r\n                  result         = {game.result}\r\n                />\r\n          )\r\n      });\r\n    } else {\r\n      historyGames = (\r\n        <div className=\"board-footer\"> \r\n          {dictionary && dictionary.NO_HISTORY_YET}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"text-center\">\r\n          {historyGames}\r\n      </div> \r\n    )\r\n  } else {\r\n    return <div className=\"loading\">Loading the Historical page...</div>\r\n  }\r\n\r\n}\r\n\r\nexport default History;","import React            from 'react';\r\nimport Square           from './Square';\r\nimport * as constants   from '../../Constants';\r\nimport './Board.css';\r\n\r\nconst COMPUTER = constants.COMPUTER;\r\nconst USER     = constants.USER;\r\n\r\nconst BoardUIHistory = ({winners, imageUser, imageComputer, folder, players}) => {\r\n    const board = players.map((square, ind) => {\r\n      const player = (square === COMPUTER) ? `${folder}%2F${imageComputer}` : ((square === USER) ? `${folder}%2F${imageUser}` : 'default'); \r\n      const win = winners.indexOf(ind) !== -1 ? 'win' : '';\r\n\r\n      return (<Square \r\n                key      = {ind} \r\n                player   = {player} \r\n                win      = {win}\r\n                disabled = {true}\r\n                id       = {ind}\r\n              />\r\n      ) \r\n    }); \r\n    \r\n    return (\r\n      <div className=\"board\">\r\n        {board}\r\n      </div>\r\n    )\r\n \r\n}  \r\n\r\nexport default BoardUIHistory;","import React, { useContext, useEffect }  from 'react';\r\nimport {CategoryContext}      from '../../contexts/CategoryContext';\r\nimport { DictionaryContext }  from '../../contexts/DictionaryContext';\r\nimport { GameContext }        from '../../contexts/GameContext';\r\nimport CategoryHistory        from '../Category/CategoryHistory';\r\nimport StartGameHistory       from '../StartGame/StartGameHistory';\r\nimport LevelHistory           from '../Level/LevelHistory';\r\nimport ImagesHistory          from '../Images/ImagesHistory';\r\nimport BoardUIHistory         from '../Board/BoardUIHistory';\r\nimport Result                 from './Result';\r\nimport types                  from '../../reducers/types';\r\nimport './GameHistory.css';\r\n\r\nconst GameHistory = (props) => {\r\n  const { dictionary, error } = useContext(DictionaryContext);  \r\n  const { categories } = useContext(CategoryContext);\r\n  const { getGame, dispatch } = useContext(GameContext); \r\n\r\n  let categoryId, imageComputer, imageUser, first, level, players, winners, result;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const chk = document.querySelector('input#menu');\r\n      if (chk){\r\n        chk.checked = false;\r\n      }\r\n    }\r\n  });\r\n    \r\n  if (error){\r\n    return <div className=\"error\">{error}</div>\r\n  }\r\n\r\n  const gameId = props.match.params.id * 1;\r\n  let game = getGame(gameId);\r\n  if (game){\r\n    ({categoryId, imageComputer, imageUser, first, level, board: players, winners, result } = game);\r\n  }\r\n\r\n  return game && categories && dictionary ? (\r\n    <div className=\"text-center\">\r\n\r\n        <CategoryHistory categoryId = {categoryId}/>\r\n\r\n        <ImagesHistory imageUser={imageUser} imageComputer={imageComputer} folder={categories[categoryId].folder}/>\r\n\r\n        <div className=\"settings\">\r\n          <StartGameHistory  first = {first} /> \r\n          <LevelHistory      level = {level} />\r\n        </div>\r\n\r\n        <BoardUIHistory\r\n          imageUser      = {imageUser}\r\n          imageComputer  = {imageComputer}\r\n          players        = {players}\r\n          winners        = {winners}\r\n          folder         = {categories[categoryId].folder}\r\n        />\r\n        \r\n        <div className=\"board-footer\">\r\n          <Result result = {result}/>\r\n\r\n          <input  type=\"button\"\r\n                  value={dictionary.DELETE_GAME} \r\n                  onClick={(e) => { \r\n                    dispatch({type: types.REMOVE_GAME, id: gameId}); \r\n                    props.history.push('/history')\r\n                  }} \r\n                  className=\"delete-game\"/>\r\n\r\n          <input  type=\"button\" \r\n                  value={dictionary.BACK}\r\n                  onClick={(e) => {\r\n                    props.history.push('/history')\r\n                  }}\r\n                  className=\"back\"/>\r\n        </div>\r\n    </div>\r\n  ) : (  \r\n    <div className=\"loading\">Loading the Game History page...</div>\r\n  )\r\n}\r\n\r\nexport default GameHistory;","import React, { useContext, useEffect } from 'react';\r\nimport { CategoryContext }   from '../../contexts/CategoryContext';\r\nimport Category              from '../Category/Category';\r\nimport useCategory           from '../../hooks/useCategory';\r\nimport './Repository.css';\r\n\r\nconst Repository = () => {\r\n  const { categories, error } = useContext(CategoryContext);\r\n  const {category, changeCategoryHandler} = useCategory();\r\n  const url = 'https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images';\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const chk = document.querySelector('input#menu');\r\n      if (chk){\r\n        chk.checked = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (error){\r\n    return <div className=\"error\" data-testid=\"error\">{error}</div>\r\n  }\r\n\r\n  return categories ? (\r\n    <div className=\"repository\" data-testid=\"repository\">\r\n      <Category onChangeCategory = {changeCategoryHandler}/>\r\n      <div className=\"repository-images\" data-testid=\"images\">\r\n      {Array(~~20).fill(1).map(\r\n          (value, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <img src={`${url}%2F${category.folder}%2F${index}.jpg?alt=media`} alt=\"user\" data-testid=\"image\"/>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">Loading the Repository page...</div>\r\n  )\r\n}\r\n\r\nexport default Repository;","import React, { useContext, useEffect } from 'react';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n\r\n  const { dictionary, error } = useContext(DictionaryContext);  \r\n\r\n  const techStack= [\r\n    { name: 'React.js',                 url: 'https://reactjs.org/'                                                  },\r\n    { name: 'React Hooks',              url: 'https://reactjs.org/docs/hooks-intro.html'                             },\r\n    { name: 'Context API',              url: 'https://reactjs.org/docs/context.html'                                 },\r\n    { name: 'Local Storage',            url: 'https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage'  },\r\n    { name: 'Javascript',               url: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript'               },\r\n    { name: 'ES6',                      url: 'http://es6-features.org'                                               },\r\n    { name: 'Firebase',                 url: 'https://firebase.google.com/docs'                                      },\r\n    { name: 'HTML5',                    url: 'https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5'         },\r\n    { name: 'CSS3',                     url: 'https://www.w3.org/TR/selectors-3/'                                    },\r\n    { name: 'Jest',                     url: 'https://jestjs.io/'                                                    },\r\n    { name: 'React Testing Library ',   url: 'https://testing-library.com/docs/react-testing-library/intro/'         }\r\n  ];\r\n  \r\n  const techStackLi = techStack.map((tech, key) => {\r\n    return (\r\n      <li key={key}><a target=\"_blank\" href={tech.url} rel=\"noopener noreferrer\">{tech.name}</a></li>\r\n    )\r\n  });\r\n\r\n  const source = 'https://github.com/lojito/tic-tac-toe';\r\n\r\n  const games  = [\r\n    { name: 'Puzzle (Angular)',                         url: 'https://github.com/lojito/puzzle'               },\r\n    { name: 'Matching pairs (Vue.js)',                  url: 'https://github.com/lojito/matching-pairs'       },\r\n    { name: 'Tic-tac-toe (Python)',                     url: 'https://github.com/lojito/python-tic-tac-toe'   },\r\n    { name: 'Tic-tac-toe 4x4 (Django)',                 url: 'https://github.com/lojito/django-tictactoe'     },\r\n    { name: 'UEFA Champions League (C)',                url: 'https://github.com/lojito/c_champions_league'   },\r\n    { name: 'Bubble sort sorting algorithm (Assembly)', url: 'https://github.com/lojito/assembly-bubble-sort' }\r\n  ];  \r\n\r\n  const gamesLi = games.map((game, key) => {\r\n    return (\r\n      <li key={key}><a target=\"_blank\" href={game.url} rel=\"noopener noreferrer\">{game.name}</a></li>\r\n    )\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const chk = document.querySelector('input#menu');\r\n      if (chk){\r\n        chk.checked = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (error){\r\n    return <div className=\"error\" data-testid=\"error\">{error}</div>\r\n  }\r\n\r\n  return dictionary ? (\r\n    <div className=\"about\" data-testid=\"about\">\r\n      <div>\r\n        <span data-testid=\"gameWrittenWith\">{dictionary.GAME_WRITTEN_WITH}</span>\r\n        <ul data-testid=\"techStack\">\r\n          {techStackLi}\r\n        </ul>  \r\n      </div> \r\n      <div>\r\n        <span data-testid=\"sourceCode\">{dictionary.SOURCE_CODE}</span>&nbsp;\r\n        <ul data-testid=\"source\">\r\n          <li>\r\n            <a target=\"_blank\" href={source} rel=\"noopener noreferrer\">{source}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <span data-testid=\"otherGames\">{dictionary.OTHER_GAMES}</span>\r\n      <ul data-testid=\"games\">\r\n        {gamesLi}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">Loading the About page...</div>\r\n  )\r\n\r\n} \r\n\r\nexport default About;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { DictionaryContext } from '../../contexts/DictionaryContext';\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  const { dictionary, error } = useContext(DictionaryContext);\r\n\r\n  const contact = {\r\n    author:   'Livan Ojito Villanueva',\r\n    email :   'livanojito@gmail.com',\r\n    github:   'https://github.com/lojito',\r\n    linkedin: 'https://ca.linkedin.com/in/lov'\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      const chk = document.querySelector('input#menu');\r\n      if (chk){\r\n        chk.checked = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (error){\r\n    return <div className=\"error\" data-testid=\"error\">{error}</div>\r\n  }\r\n\r\n  return dictionary ? (\r\n    <div className=\"contact\" data-testid=\"contact\">\r\n      <p>\r\n        <span data-testid=\"authorDescription\">{dictionary.AUTHOR} </span><span data-testid=\"author\" className=\"me\">{contact.author}</span>\r\n      </p>\r\n      <p>\r\n        <span data-testid=\"emailDescription\">{dictionary.EMAIL} </span><span data-testid=\"email\" className=\"me\" >{contact.email}</span>\r\n      </p>\r\n      <p>\r\n        <span data-testid=\"githubDescription\">{dictionary.GITHUB} </span>\r\n        <a data-testid=\"github\" target=\"_blank\" href={contact.github} rel=\"noopener noreferrer\">{contact.github}</a>\r\n      </p>\r\n      <p>\r\n        <span data-testid=\"linkedinDescription\">{dictionary.LINKEDIN} </span>\r\n        <a data-testid=\"linkedin\" target=\"_blank\" href={contact.linkedin} rel=\"noopener noreferrer\">{contact.linkedin}</a>\r\n      </p>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\" data-testid=\"loading\">Loading the Contact page...</div>\r\n  )\r\n} \r\n\r\nexport default Contact;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport GameContextProvider              from './contexts/GameContext';\r\nimport DictionaryContextProvider        from './contexts/DictionaryContext';\r\nimport CategoryContextProvider          from './contexts/CategoryContext';\r\nimport Header                           from './components/Header/Header';\r\nimport Navigation                       from './components/Navigation/Navigation';\r\nimport Game                             from './components/Game/Game';\r\nimport History                          from './components/Game/History';\r\nimport GameHistory                      from './components/Game/GameHistory';\r\nimport Repository                       from './components/Repository/Repository';\r\nimport About                            from './components/About/About';\r\nimport Contact                          from './components/Contact/Contact';\r\n\r\nfunction App() {\r\n  return (\r\n    <DictionaryContextProvider>\r\n      <GameContextProvider>\r\n        <CategoryContextProvider>\r\n          <BrowserRouter basename=\"/tic-tac-toe\">\r\n            <div className='header'>\r\n              <Header/>\r\n              <Navigation/>\r\n            </div>\r\n            <Switch>\r\n              <Route path=\"/\"           exact component={Game}/>\r\n              <Route path=\"/history\"    exact component={History}/>\r\n              <Route path=\"/repository\" exact component={Repository}/>\r\n              <Route path=\"/about\"      exact component={About}/>\r\n              <Route path=\"/contact\"    exact component={Contact}/>\r\n              <Route path=\"/:id\"        exact component={GameHistory}/>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </CategoryContextProvider>\r\n      </GameContextProvider>\r\n    </DictionaryContextProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}